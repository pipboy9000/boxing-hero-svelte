{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/regexparam.mjs","../../src/Menu.svelte","../../src/Timer.svelte","../../src/store.js","../../src/Score.svelte","../../src/GameOver.svelte","../../src/Effects.svelte","../../src/NormalGame.svelte","../../src/Calibrate.svelte","../../src/Freestle.svelte","../../src/Reaction.svelte","../../src/routes.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.23.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\n\n/**\n * Wraps a route to add route pre-conditions.\n * \n * @param {SvelteComponent} route - Svelte component for the route\n * @param {Object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...Function} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {Object} Wrapped route\n */\nexport function wrap(route, userData, ...conditions) {\n    // Check if we don't have userData\n    if (userData && typeof userData == 'function') {\n        conditions = (conditions && conditions.length) ? conditions : []\n        conditions.unshift(userData)\n        userData = undefined\n    }\n\n    // Parameter route and each item of conditions must be functions\n    if (!route || typeof route != 'function') {\n        throw Error('Invalid parameter route')\n    }\n    if (conditions && conditions.length) {\n        for (let i = 0; i < conditions.length; i++) {\n            if (!conditions[i] || typeof conditions[i] != 'function') {\n                throw Error('Invalid parameter conditions[' + i + ']')\n            }\n        }\n    }\n\n    // Returns an object that contains all the functions to execute too\n    const obj = {route, userData}\n    if (conditions && conditions.length) {\n        obj.conditions = conditions\n    }\n\n    // The _sveltesparouter flag is to confirm the object was created by this router\n    Object.defineProperty(obj, '_sveltesparouter', {\n        value: true\n    })\n\n    return obj\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    return tick().then(() => {\n        window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n    })\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function pop() {\n    // Execute this code when the current call stack is complete\n    return tick().then(() => {\n        window.history.back()\n    })\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    return tick().then(() => {\n        const dest = (location.charAt(0) == '#' ? '' : '#') + location\n        try {\n            window.history.replaceState(undefined, undefined, dest)\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n        }\n\n        // The method above doesn't trigger the hashchange event, so let's do that manually\n        window.dispatchEvent(new Event('hashchange'))\n    })\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute')\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n}\n\n/**\n * Performs a callback in the next tick and returns a Promise that resolves once that's done\n *\n * @param {Function} cb - Callback to invoke\n * @returns {Promise} Promise that resolves after the callback has been invoked, with the return value of the callback (if any)\n * @deprecated Deprecated since version 2.2 and will be removed in version 3. Use `tick` from the Svelte runtime instead (`import {tick} from 'svelte'`).\n */\nexport function nextTickPromise(cb) {\n    // eslint-disable-next-line no-console\n    console.warn('nextTickPromise from \\'svelte-spa-router\\' is deprecated and will be removed in version 3; use the \\'tick\\' method from the Svelte runtime instead')\n    return tick().then(cb)\n}\n</script>\n\n{#if componentParams}\n  <svelte:component this=\"{component}\" params=\"{componentParams}\" on:routeEvent />\n{:else}\n  <svelte:component this=\"{component}\" on:routeEvent />\n{/if}\n\n<script>\nimport {createEventDispatcher} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent} component - Svelte component for the route\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.route\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n        }\n        else {\n            this.component = component\n            this.conditions = []\n            this.userData = undefined\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, remove it before we run the matching\n        if (prefix && path.startsWith(prefix)) {\n            path = path.substr(prefix.length) || '/'\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            out[this._keys[i]] = matches[++i] || null\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {SvelteComponent} component - Svelte component\n     * @property {string} name - Name of the Svelte component\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {Object} [userData] - Custom data passed by the user\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!this.conditions[i](detail)) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nconst dispatchNextTick = (name, detail) => {\n    // Execute this code when the current call stack is complete\n    tick().then(() => {\n        dispatch(name, detail)\n    })\n}\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n$: {\n    // Find a route matching the location\n    component = null\n    let i = 0\n    while (!component && i < routesList.length) {\n        const match = routesList[i].match($loc.location)\n        if (match) {\n            const detail = {\n                component: routesList[i].component,\n                name: routesList[i].component.name,\n                location: $loc.location,\n                querystring: $loc.querystring,\n                userData: routesList[i].userData\n            }\n\n            // Check if the route can be loaded - if all conditions succeed\n            if (!routesList[i].checkConditions(detail)) {\n                // Trigger an event to notify the user\n                dispatchNextTick('conditionsFailed', detail)\n                break\n            }\n            component = routesList[i].component\n            // Set componentParams onloy if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n            // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n            if (match && typeof match == 'object' && Object.keys(match).length) {\n                componentParams = match\n            }\n            else {\n                componentParams = null\n            }\n\n            dispatchNextTick('routeLoaded', detail)\n        }\n        i++\n    }\n}\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<script>\r\n  import { push, pop, replace } from \"svelte-spa-router\";\r\n</script>\r\n\r\n<style>\r\n  .menu {\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: center;\r\n  }\r\n\r\n  .items {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    max-height: 50vh;\r\n    max-width: 330px;\r\n    overflow: auto;\r\n    scroll-behavior: smooth;\r\n    scroll-snap-type: both;\r\n  }\r\n\r\n  .logo {\r\n    background-image: url(\"../images/logo.png\");\r\n    width: 90%;\r\n    height: 40%;\r\n    max-width: 860px;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n  }\r\n\r\n  .item {\r\n    text-align: center;\r\n    width: 90%;\r\n    max-width: 300px;\r\n    height: 60px;\r\n    font-family: \"Rubik\", sans-serif;\r\n    background: none;\r\n    border: none;\r\n    color: white;\r\n    font-size: 2.2em;\r\n    text-shadow: 0px 8px 2px #0000008a;\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n    scroll-snap-align: start;\r\n    box-sizing: content-box;\r\n  }\r\n\r\n  /* scrollbars */\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n  }\r\n  ::-webkit-scrollbar-button {\r\n    width: 15px;\r\n    height: 15px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #e1e1e1;\r\n    border: 0px none #ffffff;\r\n    border-radius: 50px;\r\n  }\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #ffffff;\r\n  }\r\n  ::-webkit-scrollbar-thumb:active {\r\n    background: #ffffff;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: #666666;\r\n    border: 0px none #ffffff;\r\n    border-radius: 50px;\r\n  }\r\n  ::-webkit-scrollbar-track:hover {\r\n    background: #666666;\r\n  }\r\n  ::-webkit-scrollbar-track:active {\r\n    background: #333333;\r\n  }\r\n  ::-webkit-scrollbar-corner {\r\n    background: transparent;\r\n  }\r\n\r\n  hr {\r\n    width: 60%;\r\n    border: none;\r\n    height: 2px;\r\n    background: linear-gradient(90deg, transparent, white, transparent);\r\n    margin: 0;\r\n  }\r\n</style>\r\n\r\n<div id=\"menu\" class=\"menu\">\r\n  <div class=\"logo\" />\r\n  <hr />\r\n  <div class=\"items\">\r\n    <div class=\"item\" on:click={() => push('/game')}>Normal</div>\r\n    <div class=\"item\" on:click={() => push('/freestyle')}>Free Style</div>\r\n    <!-- <div class=\"item\" on:click={() => push('/reaction')}>Reaction</div> -->\r\n    <div class=\"item\" on:click={() => push('/calibrate')}>Calibrate</div>\r\n    <!-- <div class=\"item\" on:click={() => push('/options')}>Options</div> -->\r\n  </div>\r\n  <hr />\r\n</div>\r\n","<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import { onMount } from \"svelte\";\r\n  import { tick } from \"svelte\";\r\n\r\n  export let gameType = \"normal\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let time = 0;\r\n\r\n  let timerInterval;\r\n\r\n  let circle;\r\n\r\n  onMount(() => {\r\n    dispatch(\"loaded\");\r\n  });\r\n\r\n  export function setTime(seconds) {\r\n    if (timerInterval) clearInterval(timerInterval);\r\n\r\n    time = seconds;\r\n\r\n    circle.style.transition = \"\";\r\n    circle.style.strokeDashoffset = 0;\r\n\r\n    setTimeout(() => {\r\n      if (!circle) return;\r\n      circle.style.transition =\r\n        \"stroke-dashoffset \" +\r\n        seconds +\r\n        \"s linear, stroke \" +\r\n        seconds +\r\n        \"s linear\";\r\n      circle.style.strokeDashoffset = -99;\r\n    }, 100);\r\n\r\n    timerInterval = setTimeout(timeTick, 1000);\r\n  }\r\n\r\n  function timeTick() {\r\n    time--;\r\n    if (time == 0) {\r\n      dispatch(\"end\");\r\n    } else {\r\n      timerInterval = setTimeout(timeTick, 1000);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .timer {\r\n    position: absolute;\r\n    color: white;\r\n    font-size: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .timerSeconds {\r\n    position: absolute;\r\n    font-size: 40px;\r\n  }\r\n\r\n  .timerCircle {\r\n    fill: none;\r\n    stroke-width: 7;\r\n    stroke-linecap: round;\r\n    stroke-dasharray: 100 100;\r\n    stroke-dashoffset: 0;\r\n    stroke: white;\r\n    transition: opacity 0.5s;\r\n  }\r\n\r\n  @media screen and (max-height: 460px) {\r\n    .timer {\r\n      position: fixed;\r\n      left: 20px;\r\n      top: 20px;\r\n    }\r\n  }\r\n\r\n  .reaction {\r\n    position: relative;\r\n    z-index: 1;\r\n    left: 0px;\r\n    top: 0px;\r\n  }\r\n\r\n  .freestyle {\r\n    position: relative;\r\n    margin-top: 20px;\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"timer\"\r\n  class:freestyle={gameType == 'freestyle'}\r\n  class:reaction={gameType == 'reaction'}>\r\n  <div class=\"timerSeconds\">{time}</div>\r\n  <!-- <svg viewBox=\"0 0 110 110\" preserveAspectRatio=\"xMidYMid meet\"> -->\r\n  <svg width=\"110\" height=\"110\">\r\n    <circle\r\n      bind:this={circle}\r\n      class=\"timerCircle\"\r\n      cx=\"55\"\r\n      cy=\"55\"\r\n      r=\"50\"\r\n      pathlength=\"100\" />\r\n  </svg>\r\n</div>\r\n","import {\r\n    writable\r\n} from 'svelte/store';\r\n\r\nexport const hitTarget = writable(localStorage.getItem(\"hitTarget\") || 15);\r\n\r\n// export const topScoreNormal = writable(localStorage.getItem(\"topScoreNormal\") || 0);\r\n// export const topScoreFreestle = writable(localStorage.getItem(\"topScoreFreestle\") || 0);\r\n// export const topScoreReaction = writable(localStorage.getItem(\"topScoreReaction\") || 0);\r\n\r\nhitTarget.subscribe(value => {\r\n    localStorage.setItem(\"hitTarget\", value);\r\n})\r\n\r\n// topScoreNormal.subscribe(value => {\r\n//     localStorage.setItem(\"topScoreNormal\", value);\r\n// })\r\n\r\n// topScoreFreestle.subscribe(value => {\r\n//     localStorage.setItem(\"topScoreFreestle\", value);\r\n// })\r\n\r\n// hitTarget.subscribe(value => {\r\n//     localStorage.setItem(\"topScoreReaction\", value);\r\n// })","<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n\r\n  export let score;\r\n  export let combo = 0;\r\n\r\n  let currentScore = 0;\r\n  let active = false;\r\n\r\n  let comboDiv;\r\n\r\n  onMount(() => {\r\n    active = true;\r\n    requestAnimationFrame(render);\r\n  });\r\n\r\n  onDestroy(() => {\r\n    active = false;\r\n  });\r\n\r\n  $: {\r\n    if (comboDiv) {\r\n      if (combo > 2) {\r\n        comboDiv.style.opacity = 1;\r\n        comboDiv.style.transform = `translate(-50%, -50%) scale(${1 +\r\n          combo / 10})`;\r\n      }\r\n\r\n      if (combo == 0) {\r\n        comboDiv.style.opacity = 0;\r\n        comboDiv.style.transform = `translate(-50%, -50%) scale(1)`;\r\n      }\r\n    }\r\n  }\r\n\r\n  export function reset() {\r\n    score = 0;\r\n    currentScore = 0;\r\n  }\r\n\r\n  function render() {\r\n    if (!active) return;\r\n\r\n    if (Math.abs(currentScore - score) > 0.1) {\r\n      currentScore += (score - currentScore) / 15;\r\n    }\r\n\r\n    requestAnimationFrame(render);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .score {\r\n    color: white;\r\n    font-size: 50px;\r\n    text-align: center;\r\n  }\r\n\r\n  .combo {\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    font-size: 60px;\r\n    transform: translate(-50%, -50%);\r\n    left: 50%;\r\n    text-shadow: 0px 0px 25px red, 0px 4px 1px red, -2px 0px 1px red,\r\n      2px 0px 1px red, 0px 8px 1px #9f0000;\r\n    transition: transform 0.25s cubic-bezier(0.25, 1.73, 0.7, -0.8),\r\n      opacity 0.2s;\r\n    opacity: 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"combo\" bind:this={comboDiv}>{combo - 1}X</div>\r\n<div class=\"score\">{Math.round(currentScore)}</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let score;\r\n\r\n  export let gameType;\r\n\r\n  let topScore;\r\n\r\n  function getTopScore() {\r\n    switch (gameType) {\r\n      case \"normal\":\r\n        topScore = +localStorage.getItem(\"topScoreNormal\") || 0;\r\n        break;\r\n\r\n      case \"freestyle\":\r\n        topScore = +localStorage.getItem(\"topScoreFreestyle\") || 0;\r\n        break;\r\n\r\n      case \"reaction\":\r\n        topScore = +localStorage.getItem(\"topScoreReaction\") || 0;\r\n        break;\r\n    }\r\n  }\r\n\r\n  function setTopScore() {\r\n    switch (gameType) {\r\n      case \"normal\":\r\n        localStorage.setItem(\"topScoreNormal\", topScore);\r\n        break;\r\n\r\n      case \"freestyle\":\r\n        localStorage.setItem(\"topScoreFreestyle\", topScore);\r\n        break;\r\n\r\n      case \"reaction\":\r\n        localStorage.setItem(\"topScoreReaction\", topScore);\r\n        break;\r\n    }\r\n  }\r\n\r\n  $: {\r\n    if (score > topScore) {\r\n      topScore = score;\r\n      setTopScore();\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    getTopScore();\r\n  });\r\n\r\n  function restart() {\r\n    dispatch(\"restart\");\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .bg {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #000000b5;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: absolute;\r\n    color: white;\r\n    text-align: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .restart {\r\n    width: 200px;\r\n    height: 60px;\r\n    font-size: 25px;\r\n    border-radius: 50px;\r\n    border: 5px solid white;\r\n    background: transparent;\r\n    color: white;\r\n    font-family: \"Rubik\", sans-serif;\r\n    transition: opacity 0.5s ease-out;\r\n    outline: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 65px;\r\n    text-shadow: 0px 5px 5px black;\r\n  }\r\n\r\n  h2 {\r\n    margin: 0;\r\n    font-size: 25px;\r\n    margin-top: 12px;\r\n  }\r\n\r\n  .scores {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n  }\r\n\r\n  .score > div {\r\n    font-size: 60px;\r\n    text-shadow: 0px 5px 5px black;\r\n  }\r\n\r\n  .bottom {\r\n    height: 70%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  @media screen and (max-height: 460px) {\r\n    .score > div {\r\n      font-size: 50px;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-height: 340px) {\r\n    .score > div {\r\n      font-size: 40px;\r\n      margin-top: 0;\r\n    }\r\n\r\n    h2 {\r\n      margin-top: 0px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-height: 400px) {\r\n    h1 {\r\n      margin-top: 20px;\r\n      font-size: 80px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 470px) {\r\n    h1 {\r\n      margin-top: 20px;\r\n      font-size: 50px;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"bg\">\r\n  <h1>Game Over</h1>\r\n  <div class=\"scores\">\r\n    <div class=\"score\">\r\n      <h2>Score:</h2>\r\n      <div>{Math.round(score)}</div>\r\n    </div>\r\n    <div class=\"score\">\r\n      <h2>Top Score:</h2>\r\n      <div>{Math.round(topScore)}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"bottom\">\r\n    <button class=\"restart\" on:click={restart}>Restart</button>\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n\r\n  let active = false;\r\n\r\n  let particles = [];\r\n\r\n  let canvas, ctx;\r\n  let width = window.innerWidth;\r\n  let height = window.innerHeight;\r\n\r\n  let PARTICLE_MAX_AGE = 20;\r\n\r\n  let flashAmount = 0;\r\n  let flashColor = \"255,255,255\";\r\n\r\n  onMount(() => {\r\n    active = true;\r\n    ctx = canvas.getContext(\"2d\");\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    initParticles();\r\n    requestAnimationFrame(render);\r\n  });\r\n\r\n  onDestroy(() => {\r\n    active = false;\r\n  });\r\n\r\n  function clear() {\r\n    if (!canvas) return;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  }\r\n\r\n  export function spawnParticles(amount, vx, vy) {\r\n    for (let i = 0; i < amount; i++) {\r\n      let p = particles.find(p => !p.active);\r\n      if (!p) return;\r\n\r\n      p.x = width / 2 + vx * Math.random() * 50;\r\n      p.y = height / 2 + vy * Math.random() * 50;\r\n      p.vx = vx + Math.random() * 10 - 5;\r\n      p.vy = vy + Math.random() * 10 - 5;\r\n      p.active = true;\r\n      p.age = 0;\r\n    }\r\n  }\r\n\r\n  function moveParticles() {\r\n    particles.forEach(p => {\r\n      if (p.active) {\r\n        p.x += p.vx;\r\n        p.y += p.vy;\r\n\r\n        p.vx *= 0.96;\r\n        p.vy = p.vy * 0.96 + 1;\r\n        p.age += 1;\r\n\r\n        if (p.age > PARTICLE_MAX_AGE) {\r\n          p.active = false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function initParticles() {\r\n    for (let i = 0; i < 200; i++) {\r\n      let p = {\r\n        x: 0,\r\n        y: 0,\r\n        vx: 0,\r\n        vy: 0,\r\n        age: 0,\r\n        active: false\r\n      };\r\n      particles.push(p);\r\n    }\r\n  }\r\n\r\n  function drawParticles() {\r\n    ctx.globalCompositeOperation = \"overlay\";\r\n    particles.forEach(p => {\r\n      if (p.active) {\r\n        ctx.beginPath();\r\n        let life = p.age / PARTICLE_MAX_AGE;\r\n        ctx.fillStyle = `rgb(255, 255, 255)`;\r\n        ctx.arc(p.x, p.y, 3 - life * 3, 0, Math.PI * 2);\r\n        ctx.fill();\r\n      }\r\n    });\r\n  }\r\n\r\n  function drawFlash() {\r\n    if (flashAmount > 0) {\r\n      flashAmount *= 0.93;\r\n      if (flashAmount < 0.01) {\r\n        flashAmount = 0;\r\n      }\r\n    }\r\n    ctx.fillStyle = `rgba(${flashColor},${flashAmount})`;\r\n    ctx.fillRect(0, 0, width, height);\r\n  }\r\n\r\n  export function flash(amount, color) {\r\n    flashColor = color;\r\n    flashAmount += amount;\r\n  }\r\n\r\n  function test() {\r\n    let vx = Math.random() * 30 - 15;\r\n    let vy = Math.random() * 30 - 15;\r\n    flash(0.2);\r\n    spawnParticles(5, vx, vy);\r\n  }\r\n\r\n  function render() {\r\n    moveParticles();\r\n\r\n    clear();\r\n    drawFlash();\r\n    drawParticles();\r\n\r\n    if (active) requestAnimationFrame(render);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .effects {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    pointer-events: none;\r\n  }\r\n</style>\r\n\r\n<canvas class=\"effects\" bind:this={canvas} />\r\n","<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { pop } from \"svelte-spa-router\";\r\n  import Timer from \"./Timer.svelte\";\r\n  import { hitTarget } from \"./store.js\";\r\n  import Score from \"./Score.svelte\";\r\n  import GameOver from \"./GameOver.svelte\";\r\n  import Effects from \"./Effects.svelte\";\r\n\r\n  const STATE = {\r\n    GetReady: 0,\r\n    Playing: 1,\r\n    GameOver: 2\r\n  };\r\n\r\n  let gameType = \"normal\";\r\n\r\n  let state = STATE.GameOver;\r\n\r\n  let hpBar;\r\n  let hpColor;\r\n  let msg;\r\n  let score;\r\n  let scoreComp;\r\n  let timer;\r\n  let onTimerEnd;\r\n  let combo = 0;\r\n  let comboTimout;\r\n\r\n  let effects;\r\n\r\n  let level;\r\n  let hp;\r\n\r\n  let maxHp;\r\n  let minHit = 2;\r\n  let hitWait = 0;\r\n\r\n  function newGame() {\r\n    score = 0;\r\n    combo = 0;\r\n    hp = 45;\r\n    maxHp = 45;\r\n    level = 0;\r\n    hpBar.style.width = \"100%\";\r\n    hpColor.style.backgroundColor = \"#62ff00\";\r\n    window.addEventListener(\"devicemotion\", hit, true);\r\n    getReady(3);\r\n    scoreComp.reset();\r\n  }\r\n\r\n  function getReady(seconds) {\r\n    state = STATE.GetReady;\r\n    msg = \"Get Ready!!\";\r\n    hpBar.style.width = \"100%\";\r\n    hpColor.style.backgroundColor = \"#62ff00\";\r\n    onTimerEnd = nextLevel;\r\n    level++;\r\n    timer.setTime(seconds);\r\n  }\r\n\r\n  function nextLevel() {\r\n    if (state == STATE.GameOver) return;\r\n    state = STATE.Playing;\r\n    maxHp = 45 + level * 5;\r\n    hp = maxHp;\r\n    msg = \"GO!!!\";\r\n    onTimerEnd = gameOver;\r\n    timer.setTime(30 + (level - 1) * 3);\r\n  }\r\n\r\n  function gameOver() {\r\n    state = STATE.GameOver;\r\n    window.removeEventListener(\"devicemotion\", hit, true);\r\n  }\r\n\r\n  function timerEnd() {\r\n    onTimerEnd();\r\n  }\r\n\r\n  function hit(event) {\r\n    if (hitWait > 0) {\r\n      hitWait--;\r\n      return;\r\n    }\r\n\r\n    let x = event.acceleration.x;\r\n    let y = event.acceleration.y;\r\n    let z = event.acceleration.z;\r\n\r\n    let hit = Math.sqrt(x * x + y * y + z * z); //movement vector length\r\n\r\n    if (state == STATE.Playing) {\r\n      hitWait = 15;\r\n\r\n      if (hit < minHit) return;\r\n\r\n      hit /= $hitTarget; //calibrate\r\n\r\n      hp -= hit;\r\n\r\n      let scoreToAdd = hit * 100;\r\n\r\n      //combo\r\n      if (comboTimout) {\r\n        clearInterval(comboTimout);\r\n      }\r\n      comboTimout = setTimeout(() => {\r\n        combo = 0;\r\n      }, 400);\r\n      combo++;\r\n\r\n      if (combo > 2) scoreToAdd *= combo - 1;\r\n      score += scoreToAdd;\r\n\r\n      if (hp < 0) hp = 0;\r\n\r\n      let hpNormalized = hp / maxHp;\r\n      hpBar.style.width = hpNormalized * 100 + \"%\";\r\n      hpColor.style.backgroundColor = `hsl(${Math.floor(\r\n        hpNormalized * 120\r\n      )},100%,60%)`;\r\n\r\n      effects.spawnParticles(combo > 2 ? 6 : 2, x, y);\r\n\r\n      if (combo > 2) {\r\n        let redLevel = 255 - (combo / 8) * 128;\r\n        let c = `255,${redLevel},${redLevel}`;\r\n        effects.flash(0.2, c);\r\n      } else {\r\n        effects.flash(0.2, \"255,255,255\");\r\n      }\r\n\r\n      if (hp == 0) {\r\n        getReady(10 + level * 3);\r\n      }\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    newGame();\r\n  });\r\n\r\n  onDestroy(() => {\r\n    gameOver();\r\n  });\r\n\r\n  function testHit() {\r\n    let event = {\r\n      acceleration: {\r\n        x: Math.random() * 10 - 5,\r\n        y: Math.random() * 10 - 5,\r\n        z: Math.random() * 10 - 5\r\n      }\r\n    };\r\n\r\n    hit(event);\r\n    hitWait = 0;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .game {\r\n    display: flex;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .level {\r\n    color: white;\r\n    font-size: 30px;\r\n    height: 40px;\r\n    text-shadow: 0 5px 3px black;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .msg {\r\n    color: white;\r\n    font-size: 60px;\r\n    text-align: center;\r\n    text-shadow: 0 5px 3px black;\r\n  }\r\n\r\n  .hpContainer {\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n  }\r\n\r\n  .hp {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(\r\n      to bottom,\r\n      #f4f4f4 0%,\r\n      #eaeaea 47%,\r\n      #d4d4d4 48%,\r\n      #464646 100%\r\n    );\r\n    box-shadow: 0 10px 20px #0000009c, 3px 3px 2px #00000063 inset,\r\n      -3px -4px 2px #909090 inset;\r\n    transition: width 0.5s;\r\n    border-radius: 7px;\r\n    position: relative;\r\n  }\r\n\r\n  .middle {\r\n    height: 100%;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    display: flex;\r\n  }\r\n\r\n  .hpColor {\r\n    background-color: #62ff00;\r\n    width: 100%;\r\n    height: 100%;\r\n    mix-blend-mode: multiply;\r\n    transition: background-color 0.3s ease-out;\r\n    border-radius: 7px;\r\n    position: absolute;\r\n  }\r\n\r\n  .texts {\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .backBtn {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n    font-size: 30px;\r\n    color: white;\r\n  }\r\n\r\n  .bottom {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .score {\r\n    font-size: 30px;\r\n    color: white;\r\n    text-align: center;\r\n    text-shadow: 0px 5px 5px black;\r\n  }\r\n\r\n  .barHighlight {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 64%;\r\n    background: white;\r\n    top: 0;\r\n    right: 0;\r\n    border-radius: 3px;\r\n    opacity: 1.5;\r\n    background: linear-gradient(\r\n      25deg,\r\n      #ffffff,\r\n      #fff0,\r\n      #ffffffd4 80%,\r\n      #fff0 87%,\r\n      #ffffffc7 100%\r\n    );\r\n    box-sizing: border-box;\r\n    mix-blend-mode: overlay;\r\n  }\r\n\r\n  @media screen and (max-height: 460px) {\r\n    .middle {\r\n      height: 0;\r\n    }\r\n\r\n    .score {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-height: 315px) {\r\n    .bottom {\r\n      margin-top: 0;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"game\" on:click={testHit}>\r\n  <Effects bind:this={effects} />\r\n  <div class=\"texts\">\r\n    <div class=\"level\">Level {level == 0 ? 1 : level}</div>\r\n    <div class=\"msg\">{msg}</div>\r\n    <div class=\"score\">\r\n      Score:\r\n      <Score {score} bind:this={scoreComp} {combo} />\r\n    </div>\r\n  </div>\r\n  <div class=\"middle\">\r\n    <Timer bind:this={timer} on:end={timerEnd} />\r\n  </div>\r\n  <div class=\"bottom\">\r\n    <div class=\"hpContainer\">\r\n      <div class=\"hp\" bind:this={hpBar}>\r\n        <div class=\"hpColor\" bind:this={hpColor} />\r\n        <div class=\"barHighlight\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"backBtn\" on:click={() => pop()}>X</div>\r\n  {#if state == STATE.GameOver}\r\n    <GameOver on:restart={newGame} bind:gameType {score} />\r\n  {/if}\r\n</div>\r\n","<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { pop } from \"svelte-spa-router\";\r\n  import { hitTarget } from \"./store.js\";\r\n\r\n  let slider;\r\n\r\n  let hitLevel;\r\n  let hitWait = 0;\r\n  let greenWait = 0;\r\n  let active;\r\n\r\n  let hitCircle;\r\n  let hitRing;\r\n\r\n  onMount(async () => {\r\n    window.addEventListener(\"devicemotion\", hit, true);\r\n    active = true;\r\n    slider.value = 31 - $hitTarget;\r\n    render();\r\n  });\r\n\r\n  onDestroy(() => {\r\n    window.removeEventListener(\"devicemotion\", hit, true);\r\n    active = false;\r\n  });\r\n\r\n  function setHitTarget(e) {\r\n    hitTarget.set(31 - e.target.value);\r\n  }\r\n\r\n  function testHit() {\r\n    let event = {\r\n      acceleration: {\r\n        x: 10 + (Math.random() * 10 - 5),\r\n        y: 0,\r\n        z: 0\r\n      }\r\n    };\r\n\r\n    hit(event);\r\n    hitWait = 0;\r\n    setTimeout(() => {\r\n      greenWait = 0;\r\n    }, 500);\r\n  }\r\n\r\n  function hit(event) {\r\n    let x = event.acceleration.x;\r\n    let y = event.acceleration.y;\r\n    let z = event.acceleration.z;\r\n\r\n    let v = Math.sqrt(x * x + y * y + z * z); //movement vector length\r\n\r\n    if (v > 2) {\r\n      hitLevel = v;\r\n      hitWait = 10;\r\n\r\n      let n = v / $hitTarget; //normalize with hitTarget\r\n\r\n      if (n > 0.9 && n < 1.1) {\r\n        greenWait = 30;\r\n      }\r\n    }\r\n    greenWait--;\r\n  }\r\n\r\n  function render() {\r\n    if (!active) return;\r\n    let n = hitLevel / $hitTarget;\r\n\r\n    if (greenWait > 28) {\r\n      hitCircle.style.transform = `scale(1)`;\r\n    } else if (n > 0.01) {\r\n      hitCircle.style.transform = `scale(${n})`;\r\n    } else {\r\n      hitCircle.style.transform = `scale(0)`;\r\n    }\r\n\r\n    if (greenWait > 0) {\r\n      hitRing.style.border = \"15px solid #1dff4f\";\r\n    } else {\r\n      hitRing.style.border = \"\";\r\n    }\r\n\r\n    hitLevel *= 0.875;\r\n\r\n    if (hitWait > 0) {\r\n      hitWait--;\r\n    }\r\n\r\n    requestAnimationFrame(render);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .calibrate {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .hit {\r\n    width: 100%;\r\n    height: 60vh;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .hit > img {\r\n    border-radius: 1000px;\r\n    width: 70%;\r\n    max-width: 300px;\r\n    z-index: 2;\r\n  }\r\n\r\n  .hitCircle {\r\n    padding-bottom: min(70%, 300px);\r\n    padding-right: min(70%, 300px);\r\n    width: 0;\r\n    height: 0;\r\n    transform: scale(0, 0);\r\n    position: absolute;\r\n    background: white;\r\n    border-radius: 1000px;\r\n    z-index: 1;\r\n    /* z-index: -999; */\r\n  }\r\n\r\n  .slider {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    font-size: 40px;\r\n    margin-top: 40px;\r\n  }\r\n\r\n  .slider > input {\r\n    margin: 0;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    width: 60%;\r\n    font-size: 5px;\r\n  }\r\n\r\n  .backBtn {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n    font-size: 30px;\r\n    color: white;\r\n  }\r\n</style>\r\n\r\n<div class=\"calibrate\" on:click={testHit}>\r\n  <div class=\"hit\">\r\n    <div class=\"hitCircle\" bind:this={hitCircle} />\r\n    <img src=\"images/glove.png\" alt=\"Hit Me!\" bind:this={hitRing} />\r\n  </div>\r\n  <div class=\"slider\">\r\n    -\r\n    <input\r\n      type=\"range\"\r\n      min=\"1\"\r\n      max=\"30\"\r\n      step=\"1\"\r\n      on:change={setHitTarget}\r\n      bind:this={slider} />\r\n    +\r\n  </div>\r\n  <div\r\n    class=\"backBtn\"\r\n    on:click={() => {\r\n      pop();\r\n    }}>\r\n    X\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { pop } from \"svelte-spa-router\";\r\n  import Timer from \"./Timer.svelte\";\r\n  import { hitTarget } from \"./store.js\";\r\n  import Score from \"./Score.svelte\";\r\n  import GameOver from \"./GameOver.svelte\";\r\n  import Effects from \"./Effects.svelte\";\r\n\r\n  const STATE = {\r\n    GetReady: 0,\r\n    Playing: 1,\r\n    GameOver: 2\r\n  };\r\n\r\n  let gameType = \"freestyle\";\r\n\r\n  let state = STATE.GameOver;\r\n\r\n  let msg;\r\n  let score;\r\n  let scoreComp;\r\n  let timer;\r\n  let onTimerEnd;\r\n  let combo = 0;\r\n  let comboTimout;\r\n\r\n  let effects;\r\n\r\n  let hp;\r\n\r\n  let maxHp;\r\n  let minHit = 2;\r\n  let hitWait = 0;\r\n\r\n  function newGame() {\r\n    score = 0;\r\n    combo = 0;\r\n    window.addEventListener(\"devicemotion\", hit, true);\r\n    getReady();\r\n    scoreComp.reset();\r\n  }\r\n\r\n  function getReady() {\r\n    state = STATE.GetReady;\r\n    msg = \"Get Ready!!\";\r\n    onTimerEnd = start;\r\n    timer.setTime(3);\r\n  }\r\n\r\n  function start() {\r\n    state = STATE.Playing;\r\n    msg = \"GO!!!\";\r\n    onTimerEnd = gameOver;\r\n    timer.setTime(120);\r\n  }\r\n\r\n  function gameOver() {\r\n    state = STATE.GameOver;\r\n    window.removeEventListener(\"devicemotion\", hit, true);\r\n  }\r\n\r\n  function hit(event) {\r\n    if (hitWait > 0) {\r\n      hitWait--;\r\n      return;\r\n    }\r\n\r\n    let x = event.acceleration.x;\r\n    let y = event.acceleration.y;\r\n    let z = event.acceleration.z;\r\n\r\n    let hit = Math.sqrt(x * x + y * y + z * z); //movement vector length\r\n\r\n    if (state == STATE.Playing) {\r\n      hitWait = 15;\r\n\r\n      if (hit < minHit) return;\r\n\r\n      hit /= $hitTarget; //calibrate\r\n\r\n      let scoreToAdd = hit * 100;\r\n      if (combo > 2) scoreToAdd *= combo - 1;\r\n      score += scoreToAdd;\r\n\r\n      effects.spawnParticles(combo > 2 ? 6 : 2, x, y);\r\n\r\n      //combo\r\n      if (comboTimout) {\r\n        clearInterval(comboTimout);\r\n      }\r\n      comboTimout = setTimeout(() => {\r\n        combo = 0;\r\n      }, 400);\r\n      combo++;\r\n\r\n      if (combo > 2) {\r\n        let redLevel = 255 - (combo / 8) * 128;\r\n        let c = `255,${redLevel},${redLevel}`;\r\n        effects.flash(0.2, c);\r\n      } else {\r\n        effects.flash(0.2, \"255,255,255\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function timerEnd() {\r\n    onTimerEnd();\r\n  }\r\n\r\n  onMount(() => {\r\n    newGame();\r\n  });\r\n\r\n  onDestroy(() => {\r\n    gameOver();\r\n  });\r\n\r\n  function testHit() {\r\n    let event = {\r\n      acceleration: {\r\n        x: Math.random() * 10 - 5,\r\n        y: Math.random() * 10 - 5,\r\n        z: Math.random() * 10 - 5\r\n      }\r\n    };\r\n\r\n    hit(event);\r\n    hitWait = 0;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .game {\r\n    display: flex;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .msg {\r\n    color: white;\r\n    font-size: 60px;\r\n    text-align: center;\r\n    text-shadow: 0 5px 3px black;\r\n  }\r\n\r\n  .backBtn {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n    font-size: 30px;\r\n    color: white;\r\n  }\r\n\r\n  .score {\r\n    font-size: 30px;\r\n    color: white;\r\n    text-align: center;\r\n    text-shadow: 0px 5px 5px black;\r\n  }\r\n\r\n  @media screen and (max-height: 460px) {\r\n    .score {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"game\" on:click={testHit}>\r\n  <Effects bind:this={effects} />\r\n  <div class=\"msg\">{msg}</div>\r\n  <div class=\"score\">\r\n    Score:\r\n    <Score {score} bind:this={scoreComp} {combo} />\r\n  </div>\r\n  <Timer {gameType} bind:this={timer} on:end={timerEnd} />\r\n  <div class=\"backBtn\" on:click={() => pop()}>X</div>\r\n  {#if state == STATE.GameOver}\r\n    <GameOver on:restart={newGame} bind:gameType {score} />\r\n  {/if}\r\n</div>\r\n","<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { pop } from \"svelte-spa-router\";\r\n  import Timer from \"./Timer.svelte\";\r\n  import { hitTarget } from \"./store.js\";\r\n  import Score from \"./Score.svelte\";\r\n  import GameOver from \"./GameOver.svelte\";\r\n  import Effects from \"./Effects.svelte\";\r\n\r\n  const STATE = {\r\n    GetReady: 0,\r\n    Playing: 1,\r\n    GameOver: 2\r\n  };\r\n\r\n  let gameType = \"reaction\";\r\n\r\n  let state = STATE.GameOver;\r\n\r\n  let msg;\r\n  let score;\r\n  let scoreComp;\r\n  let timer;\r\n  let onTimerEnd;\r\n\r\n  let effects;\r\n\r\n  let minHit = 2;\r\n  let hitWait = 0;\r\n\r\n  function newGame() {\r\n    score = 0;\r\n    window.addEventListener(\"devicemotion\", hit, true);\r\n    scoreComp.reset();\r\n    getReady();\r\n  }\r\n\r\n  function getReady() {\r\n    state = STATE.GetReady;\r\n    msg = \"Get Ready!!\";\r\n    onTimerEnd = start;\r\n    timer.setTime(1);\r\n  }\r\n\r\n  function start() {\r\n    state = STATE.Playing;\r\n    msg = \"GO!!!\";\r\n    onTimerEnd = gameOver;\r\n    timer.setTime(120);\r\n  }\r\n\r\n  function gameOver() {\r\n    state = STATE.GameOver;\r\n    window.removeEventListener(\"devicemotion\", hit, true);\r\n  }\r\n\r\n  function hit(event) {\r\n    if (hitWait > 0) {\r\n      hitWait--;\r\n      return;\r\n    }\r\n\r\n    let x = event.acceleration.x;\r\n    let y = event.acceleration.y;\r\n    let z = event.acceleration.z;\r\n\r\n    let hit = Math.sqrt(x * x + y * y + z * z); //movement vector length\r\n\r\n    if (state == STATE.Playing) {\r\n      hitWait = 15;\r\n\r\n      if (hit < minHit) return;\r\n\r\n      hit /= $hitTarget; //calibrate\r\n\r\n      let scoreToAdd = hit * 100;\r\n      score += scoreToAdd;\r\n\r\n      effects.spawnParticles(4, x, y);\r\n\r\n      effects.flash(0.2, \"255,255,255\");\r\n    }\r\n  }\r\n\r\n  function timerEnd() {\r\n    onTimerEnd();\r\n  }\r\n\r\n  onMount(() => {\r\n    newGame();\r\n  });\r\n\r\n  onDestroy(() => {\r\n    gameOver();\r\n  });\r\n\r\n  function testHit() {\r\n    let event = {\r\n      acceleration: {\r\n        x: Math.random() * 10 - 5,\r\n        y: Math.random() * 10 - 5,\r\n        z: Math.random() * 10 - 5\r\n      }\r\n    };\r\n\r\n    hit(event);\r\n    hitWait = 0;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .game {\r\n    display: flex;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .msg {\r\n    color: white;\r\n    font-size: 60px;\r\n    text-align: center;\r\n    text-shadow: 0 5px 3px black;\r\n  }\r\n\r\n  .backBtn {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n    font-size: 30px;\r\n    color: white;\r\n  }\r\n\r\n  .score {\r\n    font-size: 30px;\r\n    color: white;\r\n    text-align: center;\r\n    text-shadow: 0px 5px 5px black;\r\n  }\r\n\r\n  .targetContainer {\r\n    width: 50vh;\r\n    height: 50vh;\r\n    max-width: 50vw;\r\n    max-height: 50vw;\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .target {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    border-radius: 430px;\r\n    background: #00ff08;\r\n  }\r\n\r\n  .color {\r\n  }\r\n</style>\r\n\r\n<div class=\"game\" on:click={testHit}>\r\n  <Effects bind:this={effects} />\r\n  <div class=\"msg\">{msg}</div>\r\n  <div class=\"targetContainer\">\r\n    <Timer {gameType} bind:this={timer} on:end={timerEnd} />\r\n    <div class=\"target\" />\r\n    <div class=\"color\" />\r\n  </div>\r\n  <div class=\"score\">\r\n    Score:\r\n    <Score {score} bind:this={scoreComp} />\r\n  </div>\r\n  <div class=\"backBtn\" on:click={() => pop()}>X</div>\r\n  {#if state == STATE.GameOver}\r\n    <GameOver on:restart={newGame} bind:gameType {score} />\r\n  {/if}\r\n</div>\r\n","import Menu from './Menu.svelte';\r\nimport NormalGame from './NormalGame.svelte';\r\nimport Calibrate from './Calibrate.svelte';\r\nimport Freestle from './Freestle.svelte';\r\nimport Reaction from './Reaction.svelte';\r\n\r\nexport const routes = {\r\n    '/': Menu,\r\n    '/game': NormalGame,\r\n    '/calibrate': Calibrate,\r\n    '/freestyle': Freestle,\r\n    '/reaction': Reaction,\r\n}","<script>\n  import { onMount, onDestroy } from \"svelte\";\n  import Router from \"svelte-spa-router\";\n  import { routes } from \"./routes.js\";\n  import { push, pop, replace, location } from \"svelte-spa-router\";\n\n  let isFullScreen;\n\n  onMount(async () => {\n    let page = $location.split(\"/\")[1];\n    if (page) {\n      await replace(\"/\");\n      push(\"/\" + page);\n    }\n  });\n\n  async function fullScreen() {\n    if (!isFullScreen) {\n      document.body.requestFullscreen();\n      isFullScreen = true;\n    } else {\n      document.exitFullscreen();\n      isFullScreen = false;\n    }\n  }\n</script>\n\n<style>\n  :global(body) {\n    background: url(\"../images/leather.jpg\");\n    background-size: contain;\n    background-position: center;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    font-family: \"Rubik\", sans-serif;\n    margin: 0;\n    padding: 0;\n    white-space: nowrap;\n    width: 100vw;\n    min-height: -webkit-fill-available;\n    overflow: hidden;\n    user-select: none;\n  }\n\n  :global(html) {\n    background: url(\"../images/leather.jpg\");\n    background-size: contain;\n    background-position: center;\n    padding: 0;\n    margin: 0;\n    max-height: 100vh;\n    overflow: hidden;\n  }\n\n  :global(button) {\n    outline: none;\n  }\n\n  @font-face {\n    font-family: Rubik;\n    src: url(\"../fonts/Rubik-Bold.ttf\");\n  }\n\n  .fullScreenBtn {\n    position: absolute;\n    bottom: 15px;\n    left: 15px;\n    width: 40px;\n    background: #0d0d0d87;\n    border-radius: 3px;\n  }\n</style>\n\n<Router {routes} />\n<img\n  on:click={fullScreen}\n  class=\"fullScreenBtn\"\n  src=\"../images/full_screen_icon.svg\"\n  alt=\"full screen button\" />\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","bind","index","props","undefined","bound","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","detaching","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","charAt","hash","history","back","routes","prefix","RouteItem","path","_sveltesparouter","RegExp","pattern","keys","str","loose","tmp","ext","arr","split","shift","substring","regexparam","route","conditions","userData","_pattern","_keys","startsWith","matches","exec","out","routesList","componentParams","dispatch","dispatchNextTick","match","checkConditions","gameType","timerInterval","circle","time","timeTick","setTimeout","seconds","clearInterval","style","transition","strokeDashoffset","hitTarget","localStorage","getItem","Math","round","comboDiv","score","combo","currentScore","active","render","abs","requestAnimationFrame","opacity","transform","setItem","topScore","getTopScore","setTopScore","canvas","particles","width","innerWidth","height","innerHeight","flashAmount","flashColor","x","vx","y","vy","age","clearRect","fillStyle","fillRect","globalCompositeOperation","beginPath","life","arc","PI","getContext","initParticles","amount","find","random","color","GameOver","STATE","GetReady","Playing","hpBar","hpColor","msg","scoreComp","timer","onTimerEnd","comboTimout","effects","level","hp","maxHp","state","hitWait","newGame","backgroundColor","hit","getReady","reset","nextLevel","setTime","gameOver","acceleration","z","sqrt","$hitTarget","scoreToAdd","hpNormalized","floor","spawnParticles","redLevel","flash","slider","hitLevel","hitCircle","hitRing","greenWait","v","n","border","/","/game","/calibrate","/freestyle","/reaction","isFullScreen","page","$location","dest","replaceState","console","warn","dispatchEvent","Event","replace","exitFullscreen","body","requestFullscreen"],"mappings":"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"}