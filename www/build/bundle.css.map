{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Calibrate.svelte",
    "..\\..\\Effects.svelte",
    "..\\..\\Freestle.svelte",
    "..\\..\\GameOver.svelte",
    "..\\..\\Menu.svelte",
    "..\\..\\NormalGame.svelte",
    "..\\..\\Reaction.svelte",
    "..\\..\\Score.svelte",
    "..\\..\\Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount, onDestroy } from \"svelte\";\n  import Router from \"svelte-spa-router\";\n  import { routes } from \"./routes.js\";\n  import { push, pop, replace, location } from \"svelte-spa-router\";\n\n  let isFullScreen;\n\n  onMount(async () => {\n    let page = $location.split(\"/\")[1];\n    if (page) {\n      await replace(\"/\");\n      push(\"/\" + page);\n    }\n  });\n\n  async function fullScreen() {\n    if (!isFullScreen) {\n      document.body.requestFullscreen();\n      isFullScreen = true;\n    } else {\n      document.exitFullscreen();\n      isFullScreen = false;\n    }\n  }\n</script>\n\n<style>\n  :global(body) {\n    background: url(\"../images/leather.jpg\");\n    background-size: contain;\n    background-position: center;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    font-family: \"Rubik\", sans-serif;\n    margin: 0;\n    padding: 0;\n    white-space: nowrap;\n    width: 100vw;\n    min-height: -webkit-fill-available;\n    overflow: hidden;\n    user-select: none;\n  }\n\n  :global(html) {\n    background: url(\"../images/leather.jpg\");\n    background-size: contain;\n    background-position: center;\n    padding: 0;\n    margin: 0;\n    max-height: 100vh;\n    overflow: hidden;\n  }\n\n  :global(button) {\n    outline: none;\n  }\n\n  @font-face {\n    font-family: Rubik;\n    src: url(\"../fonts/Rubik-Bold.ttf\");\n  }\n\n  .fullScreenBtn {\n    position: absolute;\n    bottom: 15px;\n    left: 15px;\n    width: 40px;\n    background: #0d0d0d87;\n    border-radius: 3px;\n  }\n</style>\n\n<Router {routes} />\n<img\n  on:click={fullScreen}\n  class=\"fullScreenBtn\"\n  src=\"../images/full_screen_icon.svg\"\n  alt=\"full screen button\" />\n",
    "<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { pop } from \"svelte-spa-router\";\r\n  import { hitTarget } from \"./store.js\";\r\n\r\n  let slider;\r\n\r\n  let hitLevel;\r\n  let hitWait = 0;\r\n  let greenWait = 0;\r\n  let active;\r\n\r\n  let hitCircle;\r\n  let hitRing;\r\n\r\n  onMount(async () => {\r\n    window.addEventListener(\"devicemotion\", hit, true);\r\n    active = true;\r\n    slider.value = 31 - $hitTarget;\r\n    render();\r\n  });\r\n\r\n  onDestroy(() => {\r\n    window.removeEventListener(\"devicemotion\", hit, true);\r\n    active = false;\r\n  });\r\n\r\n  function setHitTarget(e) {\r\n    hitTarget.set(31 - e.target.value);\r\n  }\r\n\r\n  function testHit() {\r\n    let event = {\r\n      acceleration: {\r\n        x: 10 + (Math.random() * 10 - 5),\r\n        y: 0,\r\n        z: 0\r\n      }\r\n    };\r\n\r\n    hit(event);\r\n    hitWait = 0;\r\n    setTimeout(() => {\r\n      greenWait = 0;\r\n    }, 500);\r\n  }\r\n\r\n  function hit(event) {\r\n    let x = event.acceleration.x;\r\n    let y = event.acceleration.y;\r\n    let z = event.acceleration.z;\r\n\r\n    let v = Math.sqrt(x * x + y * y + z * z); //movement vector length\r\n\r\n    if (v > 2) {\r\n      hitLevel = v;\r\n      hitWait = 10;\r\n\r\n      let n = v / $hitTarget; //normalize with hitTarget\r\n\r\n      if (n > 0.9 && n < 1.1) {\r\n        greenWait = 30;\r\n      }\r\n    }\r\n    greenWait--;\r\n  }\r\n\r\n  function render() {\r\n    if (!active) return;\r\n    let n = hitLevel / $hitTarget;\r\n\r\n    if (greenWait > 28) {\r\n      hitCircle.style.transform = `scale(1)`;\r\n    } else if (n > 0.01) {\r\n      hitCircle.style.transform = `scale(${n})`;\r\n    } else {\r\n      hitCircle.style.transform = `scale(0)`;\r\n    }\r\n\r\n    if (greenWait > 0) {\r\n      hitRing.style.border = \"15px solid #1dff4f\";\r\n    } else {\r\n      hitRing.style.border = \"\";\r\n    }\r\n\r\n    hitLevel *= 0.875;\r\n\r\n    if (hitWait > 0) {\r\n      hitWait--;\r\n    }\r\n\r\n    requestAnimationFrame(render);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .calibrate {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .hit {\r\n    width: 100%;\r\n    height: 60vh;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .hit > img {\r\n    border-radius: 1000px;\r\n    width: 70%;\r\n    max-width: 300px;\r\n    z-index: 2;\r\n  }\r\n\r\n  .hitCircle {\r\n    padding-bottom: min(70%, 300px);\r\n    padding-right: min(70%, 300px);\r\n    width: 0;\r\n    height: 0;\r\n    transform: scale(0, 0);\r\n    position: absolute;\r\n    background: white;\r\n    border-radius: 1000px;\r\n    z-index: 1;\r\n    /* z-index: -999; */\r\n  }\r\n\r\n  .slider {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    font-size: 40px;\r\n    margin-top: 40px;\r\n  }\r\n\r\n  .slider > input {\r\n    margin: 0;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    width: 60%;\r\n    font-size: 5px;\r\n  }\r\n\r\n  .backBtn {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n    font-size: 30px;\r\n    color: white;\r\n  }\r\n</style>\r\n\r\n<div class=\"calibrate\" on:click={testHit}>\r\n  <div class=\"hit\">\r\n    <div class=\"hitCircle\" bind:this={hitCircle} />\r\n    <img src=\"images/glove.png\" alt=\"Hit Me!\" bind:this={hitRing} />\r\n  </div>\r\n  <div class=\"slider\">\r\n    -\r\n    <input\r\n      type=\"range\"\r\n      min=\"1\"\r\n      max=\"30\"\r\n      step=\"1\"\r\n      on:change={setHitTarget}\r\n      bind:this={slider} />\r\n    +\r\n  </div>\r\n  <div\r\n    class=\"backBtn\"\r\n    on:click={() => {\r\n      pop();\r\n    }}>\r\n    X\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n\r\n  let active = false;\r\n\r\n  let particles = [];\r\n\r\n  let canvas, ctx;\r\n  let width = window.innerWidth;\r\n  let height = window.innerHeight;\r\n\r\n  let PARTICLE_MAX_AGE = 20;\r\n\r\n  let flashAmount = 0;\r\n  let flashColor = \"255,255,255\";\r\n\r\n  onMount(() => {\r\n    active = true;\r\n    ctx = canvas.getContext(\"2d\");\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    initParticles();\r\n    requestAnimationFrame(render);\r\n  });\r\n\r\n  onDestroy(() => {\r\n    active = false;\r\n  });\r\n\r\n  function clear() {\r\n    if (!canvas) return;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  }\r\n\r\n  export function spawnParticles(amount, vx, vy) {\r\n    for (let i = 0; i < amount; i++) {\r\n      let p = particles.find(p => !p.active);\r\n      if (!p) return;\r\n\r\n      p.x = width / 2 + vx * Math.random() * 50;\r\n      p.y = height / 2 + vy * Math.random() * 50;\r\n      p.vx = vx + Math.random() * 10 - 5;\r\n      p.vy = vy + Math.random() * 10 - 5;\r\n      p.active = true;\r\n      p.age = 0;\r\n    }\r\n  }\r\n\r\n  function moveParticles() {\r\n    particles.forEach(p => {\r\n      if (p.active) {\r\n        p.x += p.vx;\r\n        p.y += p.vy;\r\n\r\n        p.vx *= 0.96;\r\n        p.vy = p.vy * 0.96 + 1;\r\n        p.age += 1;\r\n\r\n        if (p.age > PARTICLE_MAX_AGE) {\r\n          p.active = false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function initParticles() {\r\n    for (let i = 0; i < 200; i++) {\r\n      let p = {\r\n        x: 0,\r\n        y: 0,\r\n        vx: 0,\r\n        vy: 0,\r\n        age: 0,\r\n        active: false\r\n      };\r\n      particles.push(p);\r\n    }\r\n  }\r\n\r\n  function drawParticles() {\r\n    ctx.globalCompositeOperation = \"overlay\";\r\n    particles.forEach(p => {\r\n      if (p.active) {\r\n        ctx.beginPath();\r\n        let life = p.age / PARTICLE_MAX_AGE;\r\n        ctx.fillStyle = `rgb(255, 255, 255)`;\r\n        ctx.arc(p.x, p.y, 3 - life * 3, 0, Math.PI * 2);\r\n        ctx.fill();\r\n      }\r\n    });\r\n  }\r\n\r\n  function drawFlash() {\r\n    if (flashAmount > 0) {\r\n      flashAmount *= 0.93;\r\n      if (flashAmount < 0.01) {\r\n        flashAmount = 0;\r\n      }\r\n    }\r\n    ctx.fillStyle = `rgba(${flashColor},${flashAmount})`;\r\n    ctx.fillRect(0, 0, width, height);\r\n  }\r\n\r\n  export function flash(amount, color) {\r\n    flashColor = color;\r\n    flashAmount += amount;\r\n  }\r\n\r\n  function test() {\r\n    let vx = Math.random() * 30 - 15;\r\n    let vy = Math.random() * 30 - 15;\r\n    flash(0.2);\r\n    spawnParticles(5, vx, vy);\r\n  }\r\n\r\n  function render() {\r\n    moveParticles();\r\n\r\n    clear();\r\n    drawFlash();\r\n    drawParticles();\r\n\r\n    if (active) requestAnimationFrame(render);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .effects {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    pointer-events: none;\r\n  }\r\n</style>\r\n\r\n<canvas class=\"effects\" bind:this={canvas} />\r\n",
    "<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { pop } from \"svelte-spa-router\";\r\n  import Timer from \"./Timer.svelte\";\r\n  import { hitTarget } from \"./store.js\";\r\n  import Score from \"./Score.svelte\";\r\n  import GameOver from \"./GameOver.svelte\";\r\n  import Effects from \"./Effects.svelte\";\r\n\r\n  const STATE = {\r\n    GetReady: 0,\r\n    Playing: 1,\r\n    GameOver: 2\r\n  };\r\n\r\n  let gameType = \"freestyle\";\r\n\r\n  let state = STATE.GameOver;\r\n\r\n  let msg;\r\n  let score;\r\n  let scoreComp;\r\n  let timer;\r\n  let onTimerEnd;\r\n  let combo = 0;\r\n  let comboTimout;\r\n\r\n  let effects;\r\n\r\n  let hp;\r\n\r\n  let maxHp;\r\n  let minHit = 2;\r\n  let hitWait = 0;\r\n\r\n  function newGame() {\r\n    score = 0;\r\n    combo = 0;\r\n    window.addEventListener(\"devicemotion\", hit, true);\r\n    getReady();\r\n    scoreComp.reset();\r\n  }\r\n\r\n  function getReady() {\r\n    state = STATE.GetReady;\r\n    msg = \"Get Ready!!\";\r\n    onTimerEnd = start;\r\n    timer.setTime(3);\r\n  }\r\n\r\n  function start() {\r\n    state = STATE.Playing;\r\n    msg = \"GO!!!\";\r\n    onTimerEnd = gameOver;\r\n    timer.setTime(120);\r\n  }\r\n\r\n  function gameOver() {\r\n    state = STATE.GameOver;\r\n    window.removeEventListener(\"devicemotion\", hit, true);\r\n  }\r\n\r\n  function hit(event) {\r\n    if (hitWait > 0) {\r\n      hitWait--;\r\n      return;\r\n    }\r\n\r\n    let x = event.acceleration.x;\r\n    let y = event.acceleration.y;\r\n    let z = event.acceleration.z;\r\n\r\n    let hit = Math.sqrt(x * x + y * y + z * z); //movement vector length\r\n\r\n    if (state == STATE.Playing) {\r\n      hitWait = 15;\r\n\r\n      if (hit < minHit) return;\r\n\r\n      hit /= $hitTarget; //calibrate\r\n\r\n      let scoreToAdd = hit * 100;\r\n      if (combo > 2) scoreToAdd *= combo - 1;\r\n      score += scoreToAdd;\r\n\r\n      effects.spawnParticles(combo > 2 ? 6 : 2, x, y);\r\n\r\n      //combo\r\n      if (comboTimout) {\r\n        clearInterval(comboTimout);\r\n      }\r\n      comboTimout = setTimeout(() => {\r\n        combo = 0;\r\n      }, 400);\r\n      combo++;\r\n\r\n      if (combo > 2) {\r\n        let redLevel = 255 - (combo / 8) * 128;\r\n        let c = `255,${redLevel},${redLevel}`;\r\n        effects.flash(0.2, c);\r\n      } else {\r\n        effects.flash(0.2, \"255,255,255\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function timerEnd() {\r\n    onTimerEnd();\r\n  }\r\n\r\n  onMount(() => {\r\n    newGame();\r\n  });\r\n\r\n  onDestroy(() => {\r\n    gameOver();\r\n  });\r\n\r\n  function testHit() {\r\n    let event = {\r\n      acceleration: {\r\n        x: Math.random() * 10 - 5,\r\n        y: Math.random() * 10 - 5,\r\n        z: Math.random() * 10 - 5\r\n      }\r\n    };\r\n\r\n    hit(event);\r\n    hitWait = 0;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .game {\r\n    display: flex;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .msg {\r\n    color: white;\r\n    font-size: 60px;\r\n    text-align: center;\r\n    text-shadow: 0 5px 3px black;\r\n  }\r\n\r\n  .backBtn {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n    font-size: 30px;\r\n    color: white;\r\n  }\r\n\r\n  .score {\r\n    font-size: 30px;\r\n    color: white;\r\n    text-align: center;\r\n    text-shadow: 0px 5px 5px black;\r\n  }\r\n\r\n  @media screen and (max-height: 460px) {\r\n    .score {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"game\" on:click={testHit}>\r\n  <Effects bind:this={effects} />\r\n  <div class=\"msg\">{msg}</div>\r\n  <div class=\"score\">\r\n    Score:\r\n    <Score {score} bind:this={scoreComp} {combo} />\r\n  </div>\r\n  <Timer {gameType} bind:this={timer} on:end={timerEnd} />\r\n  <div class=\"backBtn\" on:click={() => pop()}>X</div>\r\n  {#if state == STATE.GameOver}\r\n    <GameOver on:restart={newGame} bind:gameType {score} />\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let score;\r\n\r\n  export let gameType;\r\n\r\n  let topScore;\r\n\r\n  function getTopScore() {\r\n    switch (gameType) {\r\n      case \"normal\":\r\n        topScore = +localStorage.getItem(\"topScoreNormal\") || 0;\r\n        break;\r\n\r\n      case \"freestyle\":\r\n        topScore = +localStorage.getItem(\"topScoreFreestyle\") || 0;\r\n        break;\r\n\r\n      case \"reaction\":\r\n        topScore = +localStorage.getItem(\"topScoreReaction\") || 0;\r\n        break;\r\n    }\r\n  }\r\n\r\n  function setTopScore() {\r\n    switch (gameType) {\r\n      case \"normal\":\r\n        localStorage.setItem(\"topScoreNormal\", topScore);\r\n        break;\r\n\r\n      case \"freestyle\":\r\n        localStorage.setItem(\"topScoreFreestyle\", topScore);\r\n        break;\r\n\r\n      case \"reaction\":\r\n        localStorage.setItem(\"topScoreReaction\", topScore);\r\n        break;\r\n    }\r\n  }\r\n\r\n  $: {\r\n    if (score > topScore) {\r\n      topScore = score;\r\n      setTopScore();\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    getTopScore();\r\n  });\r\n\r\n  function restart() {\r\n    dispatch(\"restart\");\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .bg {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #000000b5;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: absolute;\r\n    color: white;\r\n    text-align: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .restart {\r\n    width: 200px;\r\n    height: 60px;\r\n    font-size: 25px;\r\n    border-radius: 50px;\r\n    border: 5px solid white;\r\n    background: transparent;\r\n    color: white;\r\n    font-family: \"Rubik\", sans-serif;\r\n    transition: opacity 0.5s ease-out;\r\n    outline: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 65px;\r\n    text-shadow: 0px 5px 5px black;\r\n  }\r\n\r\n  h2 {\r\n    margin: 0;\r\n    font-size: 25px;\r\n    margin-top: 12px;\r\n  }\r\n\r\n  .scores {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n  }\r\n\r\n  .score > div {\r\n    font-size: 60px;\r\n    text-shadow: 0px 5px 5px black;\r\n  }\r\n\r\n  .bottom {\r\n    height: 70%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  @media screen and (max-height: 460px) {\r\n    .score > div {\r\n      font-size: 50px;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-height: 340px) {\r\n    .score > div {\r\n      font-size: 40px;\r\n      margin-top: 0;\r\n    }\r\n\r\n    h2 {\r\n      margin-top: 0px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-height: 400px) {\r\n    h1 {\r\n      margin-top: 20px;\r\n      font-size: 80px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 470px) {\r\n    h1 {\r\n      margin-top: 20px;\r\n      font-size: 50px;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"bg\">\r\n  <h1>Game Over</h1>\r\n  <div class=\"scores\">\r\n    <div class=\"score\">\r\n      <h2>Score:</h2>\r\n      <div>{Math.round(score)}</div>\r\n    </div>\r\n    <div class=\"score\">\r\n      <h2>Top Score:</h2>\r\n      <div>{Math.round(topScore)}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"bottom\">\r\n    <button class=\"restart\" on:click={restart}>Restart</button>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { push, pop, replace } from \"svelte-spa-router\";\r\n</script>\r\n\r\n<style>\r\n  .menu {\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: center;\r\n  }\r\n\r\n  .items {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    max-height: 50vh;\r\n    max-width: 330px;\r\n    overflow: auto;\r\n    scroll-behavior: smooth;\r\n    scroll-snap-type: both;\r\n  }\r\n\r\n  .logo {\r\n    background-image: url(\"../images/logo.png\");\r\n    width: 90%;\r\n    height: 40%;\r\n    max-width: 860px;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n  }\r\n\r\n  .item {\r\n    text-align: center;\r\n    width: 90%;\r\n    max-width: 300px;\r\n    height: 60px;\r\n    font-family: \"Rubik\", sans-serif;\r\n    background: none;\r\n    border: none;\r\n    color: white;\r\n    font-size: 2.2em;\r\n    text-shadow: 0px 8px 2px #0000008a;\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n    scroll-snap-align: start;\r\n    box-sizing: content-box;\r\n  }\r\n\r\n  /* scrollbars */\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n  }\r\n  ::-webkit-scrollbar-button {\r\n    width: 15px;\r\n    height: 15px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #e1e1e1;\r\n    border: 0px none #ffffff;\r\n    border-radius: 50px;\r\n  }\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #ffffff;\r\n  }\r\n  ::-webkit-scrollbar-thumb:active {\r\n    background: #ffffff;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: #666666;\r\n    border: 0px none #ffffff;\r\n    border-radius: 50px;\r\n  }\r\n  ::-webkit-scrollbar-track:hover {\r\n    background: #666666;\r\n  }\r\n  ::-webkit-scrollbar-track:active {\r\n    background: #333333;\r\n  }\r\n  ::-webkit-scrollbar-corner {\r\n    background: transparent;\r\n  }\r\n\r\n  hr {\r\n    width: 60%;\r\n    border: none;\r\n    height: 2px;\r\n    background: linear-gradient(90deg, transparent, white, transparent);\r\n    margin: 0;\r\n  }\r\n</style>\r\n\r\n<div id=\"menu\" class=\"menu\">\r\n  <div class=\"logo\" />\r\n  <hr />\r\n  <div class=\"items\">\r\n    <div class=\"item\" on:click={() => push('/game')}>Normal</div>\r\n    <div class=\"item\" on:click={() => push('/freestyle')}>Free Style</div>\r\n    <!-- <div class=\"item\" on:click={() => push('/reaction')}>Reaction</div> -->\r\n    <div class=\"item\" on:click={() => push('/calibrate')}>Calibrate</div>\r\n    <!-- <div class=\"item\" on:click={() => push('/options')}>Options</div> -->\r\n  </div>\r\n  <hr />\r\n</div>\r\n",
    "<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { pop } from \"svelte-spa-router\";\r\n  import Timer from \"./Timer.svelte\";\r\n  import { hitTarget } from \"./store.js\";\r\n  import Score from \"./Score.svelte\";\r\n  import GameOver from \"./GameOver.svelte\";\r\n  import Effects from \"./Effects.svelte\";\r\n\r\n  const STATE = {\r\n    GetReady: 0,\r\n    Playing: 1,\r\n    GameOver: 2\r\n  };\r\n\r\n  let gameType = \"normal\";\r\n\r\n  let state = STATE.GameOver;\r\n\r\n  let hpBar;\r\n  let hpColor;\r\n  let msg;\r\n  let score;\r\n  let scoreComp;\r\n  let timer;\r\n  let onTimerEnd;\r\n  let combo = 0;\r\n  let comboTimout;\r\n\r\n  let effects;\r\n\r\n  let level;\r\n  let hp;\r\n\r\n  let maxHp;\r\n  let minHit = 2;\r\n  let hitWait = 0;\r\n\r\n  function newGame() {\r\n    score = 0;\r\n    combo = 0;\r\n    hp = 45;\r\n    maxHp = 45;\r\n    level = 0;\r\n    hpBar.style.width = \"100%\";\r\n    hpColor.style.backgroundColor = \"#62ff00\";\r\n    window.addEventListener(\"devicemotion\", hit, true);\r\n    getReady(3);\r\n    scoreComp.reset();\r\n  }\r\n\r\n  function getReady(seconds) {\r\n    state = STATE.GetReady;\r\n    msg = \"Get Ready!!\";\r\n    hpBar.style.width = \"100%\";\r\n    hpColor.style.backgroundColor = \"#62ff00\";\r\n    onTimerEnd = nextLevel;\r\n    level++;\r\n    timer.setTime(seconds);\r\n  }\r\n\r\n  function nextLevel() {\r\n    if (state == STATE.GameOver) return;\r\n    state = STATE.Playing;\r\n    maxHp = 45 + level * 5;\r\n    hp = maxHp;\r\n    msg = \"GO!!!\";\r\n    onTimerEnd = gameOver;\r\n    timer.setTime(30 + (level - 1) * 3);\r\n  }\r\n\r\n  function gameOver() {\r\n    state = STATE.GameOver;\r\n    window.removeEventListener(\"devicemotion\", hit, true);\r\n  }\r\n\r\n  function timerEnd() {\r\n    onTimerEnd();\r\n  }\r\n\r\n  function hit(event) {\r\n    if (hitWait > 0) {\r\n      hitWait--;\r\n      return;\r\n    }\r\n\r\n    let x = event.acceleration.x;\r\n    let y = event.acceleration.y;\r\n    let z = event.acceleration.z;\r\n\r\n    let hit = Math.sqrt(x * x + y * y + z * z); //movement vector length\r\n\r\n    if (state == STATE.Playing) {\r\n      hitWait = 15;\r\n\r\n      if (hit < minHit) return;\r\n\r\n      hit /= $hitTarget; //calibrate\r\n\r\n      hp -= hit;\r\n\r\n      let scoreToAdd = hit * 100;\r\n\r\n      //combo\r\n      if (comboTimout) {\r\n        clearInterval(comboTimout);\r\n      }\r\n      comboTimout = setTimeout(() => {\r\n        combo = 0;\r\n      }, 400);\r\n      combo++;\r\n\r\n      if (combo > 2) scoreToAdd *= combo - 1;\r\n      score += scoreToAdd;\r\n\r\n      if (hp < 0) hp = 0;\r\n\r\n      let hpNormalized = hp / maxHp;\r\n      hpBar.style.width = hpNormalized * 100 + \"%\";\r\n      hpColor.style.backgroundColor = `hsl(${Math.floor(\r\n        hpNormalized * 120\r\n      )},100%,60%)`;\r\n\r\n      effects.spawnParticles(combo > 2 ? 6 : 2, x, y);\r\n\r\n      if (combo > 2) {\r\n        let redLevel = 255 - (combo / 8) * 128;\r\n        let c = `255,${redLevel},${redLevel}`;\r\n        effects.flash(0.2, c);\r\n      } else {\r\n        effects.flash(0.2, \"255,255,255\");\r\n      }\r\n\r\n      if (hp == 0) {\r\n        getReady(10 + level * 3);\r\n      }\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    newGame();\r\n  });\r\n\r\n  onDestroy(() => {\r\n    gameOver();\r\n  });\r\n\r\n  function testHit() {\r\n    let event = {\r\n      acceleration: {\r\n        x: Math.random() * 10 - 5,\r\n        y: Math.random() * 10 - 5,\r\n        z: Math.random() * 10 - 5\r\n      }\r\n    };\r\n\r\n    hit(event);\r\n    hitWait = 0;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .game {\r\n    display: flex;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .level {\r\n    color: white;\r\n    font-size: 30px;\r\n    height: 40px;\r\n    text-shadow: 0 5px 3px black;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .msg {\r\n    color: white;\r\n    font-size: 60px;\r\n    text-align: center;\r\n    text-shadow: 0 5px 3px black;\r\n  }\r\n\r\n  .hpContainer {\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n  }\r\n\r\n  .hp {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(\r\n      to bottom,\r\n      #f4f4f4 0%,\r\n      #eaeaea 47%,\r\n      #d4d4d4 48%,\r\n      #464646 100%\r\n    );\r\n    box-shadow: 0 10px 20px #0000009c, 3px 3px 2px #00000063 inset,\r\n      -3px -4px 2px #909090 inset;\r\n    transition: width 0.5s;\r\n    border-radius: 7px;\r\n    position: relative;\r\n  }\r\n\r\n  .middle {\r\n    height: 100%;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    display: flex;\r\n  }\r\n\r\n  .hpColor {\r\n    background-color: #62ff00;\r\n    width: 100%;\r\n    height: 100%;\r\n    mix-blend-mode: multiply;\r\n    transition: background-color 0.3s ease-out;\r\n    border-radius: 7px;\r\n    position: absolute;\r\n  }\r\n\r\n  .texts {\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .backBtn {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n    font-size: 30px;\r\n    color: white;\r\n  }\r\n\r\n  .bottom {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .score {\r\n    font-size: 30px;\r\n    color: white;\r\n    text-align: center;\r\n    text-shadow: 0px 5px 5px black;\r\n  }\r\n\r\n  .barHighlight {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 64%;\r\n    background: white;\r\n    top: 0;\r\n    right: 0;\r\n    border-radius: 3px;\r\n    opacity: 1.5;\r\n    background: linear-gradient(\r\n      25deg,\r\n      #ffffff,\r\n      #fff0,\r\n      #ffffffd4 80%,\r\n      #fff0 87%,\r\n      #ffffffc7 100%\r\n    );\r\n    box-sizing: border-box;\r\n    mix-blend-mode: overlay;\r\n  }\r\n\r\n  @media screen and (max-height: 460px) {\r\n    .middle {\r\n      height: 0;\r\n    }\r\n\r\n    .score {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-height: 315px) {\r\n    .bottom {\r\n      margin-top: 0;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"game\" on:click={testHit}>\r\n  <Effects bind:this={effects} />\r\n  <div class=\"texts\">\r\n    <div class=\"level\">Level {level == 0 ? 1 : level}</div>\r\n    <div class=\"msg\">{msg}</div>\r\n    <div class=\"score\">\r\n      Score:\r\n      <Score {score} bind:this={scoreComp} {combo} />\r\n    </div>\r\n  </div>\r\n  <div class=\"middle\">\r\n    <Timer bind:this={timer} on:end={timerEnd} />\r\n  </div>\r\n  <div class=\"bottom\">\r\n    <div class=\"hpContainer\">\r\n      <div class=\"hp\" bind:this={hpBar}>\r\n        <div class=\"hpColor\" bind:this={hpColor} />\r\n        <div class=\"barHighlight\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"backBtn\" on:click={() => pop()}>X</div>\r\n  {#if state == STATE.GameOver}\r\n    <GameOver on:restart={newGame} bind:gameType {score} />\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { pop } from \"svelte-spa-router\";\r\n  import Timer from \"./Timer.svelte\";\r\n  import { hitTarget } from \"./store.js\";\r\n  import Score from \"./Score.svelte\";\r\n  import GameOver from \"./GameOver.svelte\";\r\n  import Effects from \"./Effects.svelte\";\r\n\r\n  const STATE = {\r\n    GetReady: 0,\r\n    Playing: 1,\r\n    GameOver: 2\r\n  };\r\n\r\n  let gameType = \"reaction\";\r\n\r\n  let state = STATE.GameOver;\r\n\r\n  let msg;\r\n  let score;\r\n  let scoreComp;\r\n  let timer;\r\n  let onTimerEnd;\r\n\r\n  let effects;\r\n\r\n  let minHit = 2;\r\n  let hitWait = 0;\r\n\r\n  function newGame() {\r\n    score = 0;\r\n    window.addEventListener(\"devicemotion\", hit, true);\r\n    scoreComp.reset();\r\n    getReady();\r\n  }\r\n\r\n  function getReady() {\r\n    state = STATE.GetReady;\r\n    msg = \"Get Ready!!\";\r\n    onTimerEnd = start;\r\n    timer.setTime(1);\r\n  }\r\n\r\n  function start() {\r\n    state = STATE.Playing;\r\n    msg = \"GO!!!\";\r\n    onTimerEnd = gameOver;\r\n    timer.setTime(120);\r\n  }\r\n\r\n  function gameOver() {\r\n    state = STATE.GameOver;\r\n    window.removeEventListener(\"devicemotion\", hit, true);\r\n  }\r\n\r\n  function hit(event) {\r\n    if (hitWait > 0) {\r\n      hitWait--;\r\n      return;\r\n    }\r\n\r\n    let x = event.acceleration.x;\r\n    let y = event.acceleration.y;\r\n    let z = event.acceleration.z;\r\n\r\n    let hit = Math.sqrt(x * x + y * y + z * z); //movement vector length\r\n\r\n    if (state == STATE.Playing) {\r\n      hitWait = 15;\r\n\r\n      if (hit < minHit) return;\r\n\r\n      hit /= $hitTarget; //calibrate\r\n\r\n      let scoreToAdd = hit * 100;\r\n      score += scoreToAdd;\r\n\r\n      effects.spawnParticles(4, x, y);\r\n\r\n      effects.flash(0.2, \"255,255,255\");\r\n    }\r\n  }\r\n\r\n  function timerEnd() {\r\n    onTimerEnd();\r\n  }\r\n\r\n  onMount(() => {\r\n    newGame();\r\n  });\r\n\r\n  onDestroy(() => {\r\n    gameOver();\r\n  });\r\n\r\n  function testHit() {\r\n    let event = {\r\n      acceleration: {\r\n        x: Math.random() * 10 - 5,\r\n        y: Math.random() * 10 - 5,\r\n        z: Math.random() * 10 - 5\r\n      }\r\n    };\r\n\r\n    hit(event);\r\n    hitWait = 0;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .game {\r\n    display: flex;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .msg {\r\n    color: white;\r\n    font-size: 60px;\r\n    text-align: center;\r\n    text-shadow: 0 5px 3px black;\r\n  }\r\n\r\n  .backBtn {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n    font-size: 30px;\r\n    color: white;\r\n  }\r\n\r\n  .score {\r\n    font-size: 30px;\r\n    color: white;\r\n    text-align: center;\r\n    text-shadow: 0px 5px 5px black;\r\n  }\r\n\r\n  .targetContainer {\r\n    width: 50vh;\r\n    height: 50vh;\r\n    max-width: 50vw;\r\n    max-height: 50vw;\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .target {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    border-radius: 430px;\r\n    background: #00ff08;\r\n  }\r\n\r\n  .color {\r\n  }\r\n</style>\r\n\r\n<div class=\"game\" on:click={testHit}>\r\n  <Effects bind:this={effects} />\r\n  <div class=\"msg\">{msg}</div>\r\n  <div class=\"targetContainer\">\r\n    <Timer {gameType} bind:this={timer} on:end={timerEnd} />\r\n    <div class=\"target\" />\r\n    <div class=\"color\" />\r\n  </div>\r\n  <div class=\"score\">\r\n    Score:\r\n    <Score {score} bind:this={scoreComp} />\r\n  </div>\r\n  <div class=\"backBtn\" on:click={() => pop()}>X</div>\r\n  {#if state == STATE.GameOver}\r\n    <GameOver on:restart={newGame} bind:gameType {score} />\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n\r\n  export let score;\r\n  export let combo = 0;\r\n\r\n  let currentScore = 0;\r\n  let active = false;\r\n\r\n  let comboDiv;\r\n\r\n  onMount(() => {\r\n    active = true;\r\n    requestAnimationFrame(render);\r\n  });\r\n\r\n  onDestroy(() => {\r\n    active = false;\r\n  });\r\n\r\n  $: {\r\n    if (comboDiv) {\r\n      if (combo > 2) {\r\n        comboDiv.style.opacity = 1;\r\n        comboDiv.style.transform = `translate(-50%, -50%) scale(${1 +\r\n          combo / 10})`;\r\n      }\r\n\r\n      if (combo == 0) {\r\n        comboDiv.style.opacity = 0;\r\n        comboDiv.style.transform = `translate(-50%, -50%) scale(1)`;\r\n      }\r\n    }\r\n  }\r\n\r\n  export function reset() {\r\n    score = 0;\r\n    currentScore = 0;\r\n  }\r\n\r\n  function render() {\r\n    if (!active) return;\r\n\r\n    if (Math.abs(currentScore - score) > 0.1) {\r\n      currentScore += (score - currentScore) / 15;\r\n    }\r\n\r\n    requestAnimationFrame(render);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .score {\r\n    color: white;\r\n    font-size: 50px;\r\n    text-align: center;\r\n  }\r\n\r\n  .combo {\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    font-size: 60px;\r\n    transform: translate(-50%, -50%);\r\n    left: 50%;\r\n    text-shadow: 0px 0px 25px red, 0px 4px 1px red, -2px 0px 1px red,\r\n      2px 0px 1px red, 0px 8px 1px #9f0000;\r\n    transition: transform 0.25s cubic-bezier(0.25, 1.73, 0.7, -0.8),\r\n      opacity 0.2s;\r\n    opacity: 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"combo\" bind:this={comboDiv}>{combo - 1}X</div>\r\n<div class=\"score\">{Math.round(currentScore)}</div>\r\n",
    "<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import { onMount } from \"svelte\";\r\n  import { tick } from \"svelte\";\r\n\r\n  export let gameType = \"normal\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let time = 0;\r\n\r\n  let timerInterval;\r\n\r\n  let circle;\r\n\r\n  onMount(() => {\r\n    dispatch(\"loaded\");\r\n  });\r\n\r\n  export function setTime(seconds) {\r\n    if (timerInterval) clearInterval(timerInterval);\r\n\r\n    time = seconds;\r\n\r\n    circle.style.transition = \"\";\r\n    circle.style.strokeDashoffset = 0;\r\n\r\n    setTimeout(() => {\r\n      if (!circle) return;\r\n      circle.style.transition =\r\n        \"stroke-dashoffset \" +\r\n        seconds +\r\n        \"s linear, stroke \" +\r\n        seconds +\r\n        \"s linear\";\r\n      circle.style.strokeDashoffset = -99;\r\n    }, 100);\r\n\r\n    timerInterval = setTimeout(timeTick, 1000);\r\n  }\r\n\r\n  function timeTick() {\r\n    time--;\r\n    if (time == 0) {\r\n      dispatch(\"end\");\r\n    } else {\r\n      timerInterval = setTimeout(timeTick, 1000);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .timer {\r\n    position: absolute;\r\n    color: white;\r\n    font-size: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .timerSeconds {\r\n    position: absolute;\r\n    font-size: 40px;\r\n  }\r\n\r\n  .timerCircle {\r\n    fill: none;\r\n    stroke-width: 7;\r\n    stroke-linecap: round;\r\n    stroke-dasharray: 100 100;\r\n    stroke-dashoffset: 0;\r\n    stroke: white;\r\n    transition: opacity 0.5s;\r\n  }\r\n\r\n  @media screen and (max-height: 460px) {\r\n    .timer {\r\n      position: fixed;\r\n      left: 20px;\r\n      top: 20px;\r\n    }\r\n  }\r\n\r\n  .reaction {\r\n    position: relative;\r\n    z-index: 1;\r\n    left: 0px;\r\n    top: 0px;\r\n  }\r\n\r\n  .freestyle {\r\n    position: relative;\r\n    margin-top: 20px;\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"timer\"\r\n  class:freestyle={gameType == 'freestyle'}\r\n  class:reaction={gameType == 'reaction'}>\r\n  <div class=\"timerSeconds\">{time}</div>\r\n  <!-- <svg viewBox=\"0 0 110 110\" preserveAspectRatio=\"xMidYMid meet\"> -->\r\n  <svg width=\"110\" height=\"110\">\r\n    <circle\r\n      bind:this={circle}\r\n      class=\"timerCircle\"\r\n      cx=\"55\"\r\n      cy=\"55\"\r\n      r=\"50\"\r\n      pathlength=\"100\" />\r\n  </svg>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "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"
}